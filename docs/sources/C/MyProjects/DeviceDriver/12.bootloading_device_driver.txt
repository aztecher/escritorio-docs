=================================
12. bootloading device driver
=================================

参考URL

* 組み込みLinuxデバイスドライバの作り方_

これまで, デバイスドライバを作ってきたが, 毎回手動で `insmod` してきた. 開発時はこれでもいいが, 実際にプロダクトに組み込むときにはカーネル起動時に自動でロードしてもらえるようにしたい.

起動時に自動的にロードさせる
===============================

デバイスドライバを正式(?)な場所に配置する
-------------------------------------------

今まで, 自分の開発用ディレクトリでビルドして, MyDeviceModule.ko ファイルを作ってきた. これをカーネルモジュールの正式な置き場所にコピーする. この場所はカーネルのバージョンによって変わるため, `uname` によって取得する. その後, カーネルモジュールの依存関係情報を更新する必要がある. そのために, `depmod` コマンドを使う.

.. code-block:: sh

    sudo cp MyDeviceModule.ko /lib/modules/$(uname -r)/kernel/drivers/.
    sudo depmod -ae

起動時にロードするモジュールに登録する
---------------------------------------

先程のコピーと設定に寄って, どこからでも `modprobe MyDeviceModule` で作成したデバイスドライバをロードできるようになった. これを, 起動時に実行させるスクリプト(例えば, rcスクリプト)に記載すればOK. 色々と環境依存はあるが, ラズパイでは `/etc/modules-load.d/modules.conf` にモジュール名を記載すればいい. 実際には, 他のモジュールとの依存関係や, 製品使用上どのくらい早くロードしてほしいか, などを考慮して決めるのだろう.

.. code-block:: sh

    sudo bash -c 'echo MyDeviceModule >> /etc/modules-load.d/modules.conf'

確認する
----------

再起動してdmesgでログを見る. 起動時に本デバイスドライバがロードされていることが分かる.

.. code-block:: sh


    dmesg
    >> ...
    >> [...] MyDeviceModule: loading out-of-tree module taints kernel.
    >> [...] mydevice_i2c_probe
    >> [...] slave address = 0x6b
    >> [...] id = 0xd4
    >> ...


デバイスツリー対応デバドラの場合
=====================================

前回作成した, デバイスツリーに対応したデバドラの場合, `/etc/modules-load.d/modules.conf` を編集して明示的にロードしないでもカーネルが自動で MyDeviceModule.ko をロードしてくれる. これはデバイスツリーに登録されたデバイスに対応するデバイスドライバを, カーネルが自動的に探してロードしてくれるためだろう.

最後に
========

ここで終わりになるが, 色々と抜けている部分がある. 例えば変数アクセス刷るときの排他制御, アドレス変換前に, そのアドレスにアクセスできるかどうかの確認など, コードや説明の簡略化のために省略している. 実際はこれらのことも考える必要があるだろう.

また, 今回の話はLinuxデバイスドライバのほんの一部の話であり, 実装方法やルールは日々変わっている. 最新情報を正しく理解するために, やはりLinuxのソースココードやドキュメントを読む必要があるだろう. このテキストが次の一歩を踏み出すための足がかりになれば.


.. ==============================
.. リンク
.. ==============================

.. _組み込みLinuxデバイスドライバの作り方: https://qiita.com/take-iwiw/items/b9dd02724e83e36dabc3

.
